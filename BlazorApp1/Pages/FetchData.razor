@page "/fetchdata"
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the goweather api.</p>

<h4>Enter city</h4>
<input type="text" @bind="@City" />
<button @onclick="GetWeatherForecast" >Search</button>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    var today = DateTime.Today;
    <h4>@City Today: @today.ToShortDateString() </h4>
    <p>Wind: @forecasts.Wind</p>
    <p>Temp (C): @forecasts.Temperature</p>
    <p>Summary: @forecasts.Description</p>

    <h4>Forecats for Next 3 Days: </h4>

    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Wind</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts.Forecast)
            {
                <tr>
                    <td>@today.AddDays(int.Parse(forecast.Day)).ToShortDateString()</td>
                    <td>@forecast.Temperature</td>
                    <td>@forecast.Wind</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast? forecasts;
    // set default city to Berlin
    private string City = "Berlin";

    // on load of the page, load data from default city
    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast>(City);
    }

    // method executed on button click
    private async Task GetWeatherForecast()
    {
        // call to the api with the city user input
        forecasts = await Http.GetFromJsonAsync<WeatherForecast>(City);
    }

    // Weather forecast uses all properties of property class and adds description and array of forecasts
    public partial class WeatherForecast : Forecast
    {
        // json property for description
        public string? Description { get; set; }
        // json propert for array of next 3 days forecasts
        public Forecast[]? Forecast { get; set; }
    }

    // base forecats class
    public class Forecast
    {
        // json property for temperature
        public string? Temperature { get; set; }
        // json property for day
        public string? Day { get; set; }
        // json property for wind
        public string? Wind { get; set; }

    }
}
